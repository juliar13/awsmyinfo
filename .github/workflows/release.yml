name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20
          
      - name: Get dependencies
        run: go mod download
        
      - name: Build for macOS (Intel)
        run: GOOS=darwin GOARCH=amd64 go build -o ./bin/awsmyinfo-darwin-amd64 ./cmd/awsmyinfo
        
      - name: Build for macOS (Apple Silicon)
        run: GOOS=darwin GOARCH=arm64 go build -o ./bin/awsmyinfo-darwin-arm64 ./cmd/awsmyinfo
        
      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o ./bin/awsmyinfo-linux-amd64 ./cmd/awsmyinfo
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload macOS Intel Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/awsmyinfo-darwin-amd64
          asset_name: awsmyinfo-darwin-amd64
          asset_content_type: application/octet-stream
          
      - name: Upload macOS Apple Silicon Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/awsmyinfo-darwin-arm64
          asset_name: awsmyinfo-darwin-arm64
          asset_content_type: application/octet-stream
          
      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/awsmyinfo-linux-amd64
          asset_name: awsmyinfo-linux-amd64
          asset_content_type: application/octet-stream
